"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.topologicalSort = void 0;
function topologicalSort(values, key, edges) {
    const nodes = new Map();
    for (const value of values) {
        nodes.set(key(value), { dependency_of: [], references: 0, value });
    }
    for (const [, node] of nodes) {
        for (const foreignKey of edges(node.value)) {
            const target = nodes.get(foreignKey);
            if (!target) {
                continue; // ignore unknown keys
            }
            target.dependency_of.push(node);
            ++node.references;
        }
    }
    const sorted = [];
    const pending = [...nodes.values()].filter((value) => value.references === 0);
    for (;;) {
        const node = pending.pop();
        if (!node) {
            break;
        }
        nodes.delete(key(node.value));
        sorted.push(node.value);
        for (const dependent of node.dependency_of) {
            if (--dependent.references === 0) {
                pending.push(dependent);
            }
        }
    }
    if (nodes.size !== 0) {
        return null;
    }
    return sorted;
}
exports.topologicalSort = topologicalSort;
//# sourceMappingURL=topological-sort.js.map